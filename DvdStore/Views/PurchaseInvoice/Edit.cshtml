@model DvdStore.Models.PurchaseInvoice
@removeTagHelper Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "Dashboard";
    ViewData["Title"] = "Edit Purchase Invoice";
    var suppliers = ViewBag.Suppliers as List<DvdStore.Models.Suppliers> ?? new();
    var products = ViewBag.Products as List<DvdStore.Models.Products> ?? new();
}

<h2>Edit Purchase Invoice</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<form asp-action="Edit" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="PurchaseInvoiceID" />

    <!-- Supplier -->
    <div class="mb-3">
        <label class="form-label">Supplier</label>
        <select name="SupplierID" class="form-select" required>
            <option value="">-- Select Supplier --</option>
            @foreach (var s in suppliers)
            {
                <option value="@s.SupplierID" @(Model.SupplierID == s.SupplierID ? "selected" : "")>
                    @s.SupplierName
                </option>
            }
        </select>
    </div>

    <!-- Notes -->
    <div class="mb-3">
        <label class="form-label">Notes</label>
        <textarea name="Notes" class="form-control">@Model.Notes</textarea>
    </div>

    <h5>Products</h5>
    <table class="table" id="productsTable">
        <thead>
            <tr>
                <th>Product</th>
                <th>Qty</th>
                <th>Unit Cost</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.InvoiceDetails != null && Model.InvoiceDetails.Any())
            {
                foreach (var d in Model.InvoiceDetails)
                {
                    <tr>
                        <td>
                            <select name="productIds" class="form-select" required>
                                <option value="">-- Select --</option>
                                @foreach (var p in products)
                                {
                                    <option value="@p.ProductID" @(p.ProductID == d.ProductID ? "selected" : "")>
                                        @p.tbl_Albums?.Title
                                    </option>
                                }
                            </select>
                        </td>
                        <td><input name="quantities" type="number" min="1" value="@d.Quantity" class="form-control" required /></td>
                        <td><input name="unitCosts" type="number" step="0.01" value="@d.UnitCost" class="form-control" required /></td>
                        <td><button type="button" class="btn btn-sm btn-danger remove-row">Remove</button></td>
                    </tr>
                }
            }
            else
            {
                <!-- Fallback single empty row -->
                <tr>
                    <td>
                        <select name="productIds" class="form-select" required>
                            <option value="">-- Select --</option>
                            @foreach (var p in products)
                            {
                                <option value="@p.ProductID">@p.tbl_Albums?.Title</option>
                            }
                        </select>
                    </td>
                    <td><input name="quantities" type="number" min="1" value="1" class="form-control" required /></td>
                    <td><input name="unitCosts" type="number" step="0.01" value="0.00" class="form-control" required /></td>
                    <td><button type="button" class="btn btn-sm btn-danger remove-row">Remove</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" id="addRow" class="btn btn-secondary btn-sm">Add Product</button>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Update</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    <script>
        // Add new row
        document.getElementById('addRow').addEventListener('click', function () {
            const tbody = document.querySelector('#productsTable tbody');
            const clone = tbody.rows[0].cloneNode(true);
            clone.querySelectorAll('input').forEach(i => i.value = i.type==='number' ? (i.step==='0.01' ? '0.00' : '1') : '');
            const sel = clone.querySelector('select'); if (sel) sel.selectedIndex = 0;
            tbody.appendChild(clone);
        });
        // Remove row
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-row')) {
                const row = e.target.closest('tr');
                const tbody = document.querySelector('#productsTable tbody');
                if (tbody.rows.length > 1) row.remove();
            }
        });
    </script>
}

