@model DvdStore.Models.Products
@{
    ViewData["Title"] = Model.tbl_Albums?.Title;
    Layout = "_Layout1";
}

<div class="container mt-5">
    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6">
            <div id="mediaContainer" class="position-relative mb-3">
                <!-- Main Product Image -->
                <img id="mainImage"
                     src="@Model.ProductImageUrl"
                     alt="@Model.tbl_Albums?.Title"
                     class="img-fluid rounded w-100"
                     style="max-height:500px;object-fit:cover;">

                @* Hidden trailer iframe *@
                @{
                    string embedUrl = null;
                    bool hasLocalTrailer = false;
                    if (!string.IsNullOrEmpty(Model.TrailerUrl))
                    {
                        var raw = Model.TrailerUrl.Trim();

                        // Check if it's a local file (not YouTube URL)
                        if (!raw.StartsWith("http") && !raw.StartsWith("www.") && !raw.Contains("youtube") && !raw.Contains("youtu.be"))
                        {
                            hasLocalTrailer = true;
                        }
                        else
                        {
                            // convert to embed format for YouTube
                            if (raw.Contains("youtu.be/"))
                            {
                                var id = raw.Split("youtu.be/")[1].Split('?')[0];
                                embedUrl = $"https://www.youtube.com/embed/{id}";
                            }
                            else if (raw.Contains("watch?v="))
                            {
                                var id = raw.Split("watch?v=")[1].Split('&')[0];
                                embedUrl = $"https://www.youtube.com/embed/{id}";
                            }
                        }
                    }
                }
                @if (!string.IsNullOrEmpty(embedUrl))
                {
                    <div id="mainTrailer" class="ratio ratio-16x9 d-none">
                        <iframe src="@embedUrl"
                                frameborder="0"
                                allowfullscreen
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture">
                        </iframe>
                    </div>
                }
            </div>

            <!-- Thumbnails -->
            <div class="d-flex gap-2">
                <img src="@Model.ProductImageUrl"
                     class="img-thumbnail thumb-switch active-thumb"
                     style="height:80px;width:80px;object-fit:cover;cursor:pointer"
                     data-type="image" />

                @if (!string.IsNullOrEmpty(embedUrl))
                {
                    <div class="position-relative thumb-switch" data-type="video" style="cursor:pointer">
                        <img src="@Model.ProductImageUrl"
                             class="img-thumbnail"
                             style="height:80px;width:80px;object-fit:cover;opacity:.7">
                        <span class="position-absolute top-50 start-50 translate-middle bg-dark text-white px-2 rounded small">
                            ▶
                        </span>
                    </div>
                }
            </div>

            <!-- Songs Dropdown -->
            @if (Model.tbl_Albums?.tbl_Songs?.Any() == true)
            {
                <div class="dropdown mt-3">
                    <button class="btn btn-secondary dropdown-toggle w-100" type="button"
                            id="songsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Songs (@Model.tbl_Albums.tbl_Songs.Count)
                    </button>
                    <ul class="dropdown-menu w-100" aria-labelledby="songsDropdown">
                        @foreach (var s in Model.tbl_Albums.tbl_Songs)
                        {
                            <li class="dropdown-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="song-title">@s.Title</span>
                                    <div>
                                        <a href="@Url.Action("StreamAudio", "Media", new { id = s.SongID })"
                                           target="_blank" class="btn btn-sm btn-outline-primary me-1">
                                            <i class="fas fa-play"></i>
                                        </a>
                                        <a href="@Url.Action("DownloadSong", "Media", new { id = s.SongID })"
                                           class="btn btn-sm btn-outline-success">
                                            <i class="fas fa-download"></i>
                                        </a>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>

        <!-- Product Info -->
        <div class="col-md-6">
            <h1>@Model.tbl_Albums?.Title</h1>
            <p class="text-muted">By: @Model.tbl_Albums?.tbl_Artists?.ArtistName</p>

            <!-- Rating -->
            <div class="rating mb-3">
                <div class="stars">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(i <= Model.AverageRating ? "text-warning" : "text-muted")"></i>
                    }
                    <span class="ms-2">(@Model.ReviewCount reviews)</span>
                </div>
            </div>

            <div class="price mb-3">
                <h3 class="text-primary">$@Model.Price.ToString("N2")</h3>
            </div>

            <div class="stock mb-3">
                <span class="badge @(Model.StockQuantity > 0 ? "bg-success" : "bg-danger")">
                    @(Model.StockQuantity > 0 ? "In Stock" : "Out of Stock")
                </span>
                @if (Model.StockQuantity > 0)
                {
                    <small class="text-muted">@Model.StockQuantity available</small>
                }
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons mb-4">
                @if (Model.StockQuantity > 0)
                {
                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-inline-block me-2">
                        <input type="hidden" name="productId" value="@Model.ProductID" />
                        <input type="hidden" name="quantity" value="1" />
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-shopping-cart"></i> Add to Cart
                        </button>
                    </form>
                }

                <!-- Wishlist Button -->
                @if (Context.Session.GetInt32("UserId") != null)
                {
                    <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post" class="d-inline-block">
                        <input type="hidden" name="productId" value="@Model.ProductID" />
                        <button type="submit" class="btn btn-outline-danger btn-lg">
                            <i class="fas fa-heart"></i> Add to Wishlist
                        </button>
                    </form>
                }
                else
                {
                    <a asp-controller="Auth" asp-action="Login" class="btn btn-outline-danger btn-lg">
                        <i class="fas fa-heart"></i> Login to Wishlist
                    </a>
                }
            </div>

            <!-- Media Downloads - ONLY SHOW FOR RELEVANT PRODUCT TYPES -->
            @{
                var categoryName = Model.tbl_Albums?.tbl_Category?.CategoryName ?? "";
                bool isMovie = categoryName.Contains("Movie", StringComparison.OrdinalIgnoreCase);
                bool isGame = categoryName.Contains("Game", StringComparison.OrdinalIgnoreCase);
                bool isMusic = categoryName.Contains("Music", StringComparison.OrdinalIgnoreCase);
            }

            @if (isMovie || isGame || hasLocalTrailer)
            {
                <div class="media-downloads mb-4">
                    <h5>Media</h5>
                    <div class="btn-group" role="group">
                        <!-- Download Trailer - Only for movies/games with local trailers -->
                        @if (hasLocalTrailer && (isMovie || isGame))
                        {
                            <a href="@Url.Action("DownloadTrailer", "Media", new { productId = Model.ProductID })"
                               class="btn btn-outline-primary">
                                <i class="fas fa-download"></i> Download Trailer
                            </a>
                        }

                        <!-- Watch Trailer - Only for YouTube trailers -->
                        @if (!string.IsNullOrEmpty(embedUrl))
                        {
                            <button type="button" class="btn btn-outline-danger"
                                    onclick="document.getElementById('mainTrailer').classList.toggle('d-none');
                                                     document.getElementById('mainImage').classList.toggle('d-none');">
                                <i class="fas fa-play"></i> Watch Trailer
                            </button>
                        }
                    </div>
                </div>
            }

            <!-- Product Details -->
            <div class="product-details">
                <h5>Description</h5>
                <p>@Model.tbl_Albums?.Description</p>

                <div class="row">
                    <div class="col-6">
                        <strong>Category:</strong> @categoryName
                    </div>
                    <div class="col-6">
                        <strong>Release Date:</strong> @Model.tbl_Albums?.ReleaseDate?.ToString("yyyy")
                    </div>
                    <div class="col-6">
                        <strong>Producer:</strong> @Model.tbl_Producers?.ProducerName
                    </div>
                    <div class="col-6">
                        <strong>SKU:</strong> @Model.SKU
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Reviews Section -->
    <div class="row mt-5">
        <div class="col-12">
            <h3>Customer Reviews</h3>

            <!-- Rating Summary -->
            <div class="rating-summary mb-4">
                <div class="row align-items-center">
                    <div class="col-md-3 text-center">
                        <h1 class="text-primary mb-0">@Model.AverageRating.ToString("0.0")</h1>
                        <div class="stars mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= Model.AverageRating ? "text-warning" : "text-muted")"></i>
                            }
                        </div>
                        <p class="text-muted">@Model.ReviewCount reviews</p>
                    </div>
                    <div class="col-md-9">
                        <!-- Rating distribution bars would go here -->
                    </div>
                </div>
            </div>

            <!-- Add Review Form -->
            @if (Context.Session.GetInt32("UserId") != null)
            {
                <div class="card mb-4">
                    <div class="card-body">
                        <h5>Write a Review</h5>
                        <form asp-controller="ProductDetail" asp-action="AddReview" method="post" id="reviewForm">
                            <input type="hidden" name="productId" value="@Model.ProductID" />

                            <div class="mb-3">
                                <label class="form-label">Rating</label>
                                <div class="rating-input">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" name="rating" value="@i" id="rating-@i"
                                               @(i == 5 ? "checked" : "") />
                                        <label for="rating-@i" class="star-label">★</label>
                                    }
                                </div>
                            </div>

                            <div class="mb-3">
                                <textarea name="comment" class="form-control" placeholder="Share your experience..."
                                      rows="3" required maxlength="500"></textarea>
                                <div class="form-text">Maximum 500 characters</div>
                            </div>

                            <button type="submit" class="btn btn-primary">Submit Review</button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <a asp-controller="Auth" asp-action="Login" class="alert-link">Login</a> to write a review.
                </div>
            }

            <!-- Reviews List -->
            <div class="reviews-list">
                @if (ViewBag.Reviews != null && ((List<ProductReviews>)ViewBag.Reviews).Any())
                {
                    foreach (var review in (List<ProductReviews>)ViewBag.Reviews)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="mb-1">@review.User.Name</h6>
                                        <div class="stars mb-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                            <span class="ms-2 text-muted">@review.CreatedAt.ToString("MMMM dd, yyyy")</span>
                                        </div>
                                    </div>
                                    @if (AuthorizationHelper.IsAdmin(Context))
                                    {
                                        <form asp-controller="ProductDetail" asp-action="DeleteReview" method="post">
                                            <input type="hidden" name="reviewId" value="@review.ReviewID" />
                                            <button type="submit" class="btn btn-sm btn-danger"
                                                    onclick="return confirm('Delete this review?')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                                <p class="mb-0">@review.Comment</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                        <p class="text-muted">No reviews yet. Be the first to review!</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (ViewBag.RelatedProducts != null && ((List<Products>)ViewBag.RelatedProducts).Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3>Related Products</h3>
                <div class="row">
                    @foreach (var relatedProduct in (List<Products>)ViewBag.RelatedProducts)
                    {
                        <div class="col-md-3 mb-4">
                            <div class="card h-100">
                                <img src="@relatedProduct.ProductImageUrl" class="card-img-top"
                                     alt="@relatedProduct.tbl_Albums?.Title" style="height: 200px; object-fit: cover;">
                                <div class="card-body">
                                    <h6 class="card-title">@relatedProduct.tbl_Albums?.Title</h6>
                                    <p class="card-text">$@relatedProduct.Price.ToString("N2")</p>
                                    <a href="@Url.Action("Index", "ProductDetail", new { id = relatedProduct.ProductID })"
                                       class="btn btn-sm btn-outline-primary">View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }


    <style>
        .action-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .song-title {
            flex-grow: 1;
            margin-right: 15px;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .rating-input {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

            .rating-input input {
                display: none;
            }

            .rating-input label {
                cursor: pointer;
                font-size: 2rem;
                color: #ddd;
                transition: color 0.2s;
            }

            .rating-input input:checked ~ label {
                color: #ffc107;
            }

            .rating-input label:hover, .rating-input label:hover ~ label {
                color: #ffc107;
            }

        .active-thumb {
            border: 2px solid #198754;
        }
    </style>

@section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const mainImage = document.getElementById('mainImage');
                const mainTrailer = document.getElementById('mainTrailer');

                document.querySelectorAll('.thumb-switch').forEach(function (thumb) {
                    thumb.addEventListener('click', function () {
                        document.querySelectorAll('.thumb-switch').forEach(t => t.classList.remove('active-thumb'));
                        this.classList.add('active-thumb');

                        if (this.dataset.type === 'image') {
                            if (mainImage) mainImage.classList.remove('d-none');
                            if (mainTrailer) mainTrailer.classList.add('d-none');
                        } else {
                            if (mainImage) mainImage.classList.add('d-none');
                            if (mainTrailer) mainTrailer.classList.remove('d-none');
                        }
                    });
                });
            });
        </script>
}
